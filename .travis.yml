language: java
sudo: false

jdk:
  - oraclejdk8

cache:
  directories:
    - ${HOME}/.m2

branches:
  only:
    - "ibm-0.1"
    - /[0-9]+.[0-9]+.[0-9]+/

env:
  global:
    - RELEASE_REGEX=[0-9]+.[0-9]+.[0-9]+
    - ES_JAVA_OPTS="-Xms256m -Xmx512m"
  matrix:
    # sort modules by test time with quickest modules first
    - MODULE='server'
    - MODULE='hadoop-parent/janusgraph-hadoop-2'
    - MODULE='lucene'
    - MODULE='solr' ARGS='-Pdocker,solr7'
    - MODULE='solr' ARGS='-Pdocker,solr6'
    - MODULE='solr' ARGS='-Pdocker,solr5'
    - MODULE='es' ARGS='-Pelasticsearch6'
    - MODULE='es' ARGS='-Pelasticsearch5'
    - MODULE='es' ARGS='-Pelasticsearch2'
    - MODULE='es' ARGS='-Pelasticsearch1,es-docker'
    - MODULE='berkeleyje'
    - MODULE='test'
    - MODULE='cassandra' ARGS='-Dtest=**/diskstorage/cassandra/thrift/* -Dtest.skip.unordered=true -Dtest.skip.ssl=true -Dtest.skip.serial=true'
    - MODULE='cassandra' ARGS='-Dtest=**/diskstorage/cassandra/thrift/* -Dtest.skip.ordered=true -Dtest.skip.ssl=true -Dtest.skip.serial=true'
    - MODULE='cassandra' ARGS='-Dtest=**/diskstorage/cassandra/thrift/* -Dtest.skip.unordered=true -Dtest.skip.ordered=true'
    - MODULE='cassandra' ARGS='-Dtest=**/graphdb/thrift/* -Dtest.skip.unordered=true -Dtest.skip.ssl=true -Dtest.skip.serial=true'
    - MODULE='cassandra' ARGS='-Dtest=**/graphdb/thrift/* -Dtest.skip.ordered=true -Dtest.skip.ssl=true -Dtest.skip.serial=true'
    - MODULE='cassandra' ARGS='-Dtest=**/graphdb/thrift/* -Dtest.skip.unordered=true -Dtest.skip.ordered=true'
    - MODULE='cassandra' ARGS='-Dtest=**/diskstorage/cassandra/astyanax/* -Dtest.skip.unordered=true -Dtest.skip.ssl=true -Dtest.skip.serial=true'
    - MODULE='cassandra' ARGS='-Dtest=**/diskstorage/cassandra/astyanax/* -Dtest.skip.ordered=true -Dtest.skip.ssl=true -Dtest.skip.serial=true'
    - MODULE='cassandra' ARGS='-Dtest=**/diskstorage/cassandra/astyanax/* -Dtest.skip.unordered=true -Dtest.skip.ordered=true'
    - MODULE='cassandra' ARGS='-Dtest=**/graphdb/astyanax/*'
    - MODULE='cassandra' ARGS='-Dtest=**/diskstorage/cassandra/embedded/*'
    - MODULE='cassandra' ARGS='-Dtest=***/cassandra/*,*/graphdb/embedded/*'
    - MODULE='hbase-parent/janusgraph-hbase-10' ARGS='-Dtest=**/diskstorage/hbase/*'
    - MODULE='hbase-parent/janusgraph-hbase-10' ARGS='-Dtest=**/graphdb/hbase/*'
    - MODULE='hbase-parent/janusgraph-hbase-098' ARGS='-Dtest=**/diskstorage/hbase/*'
    - MODULE='hbase-parent/janusgraph-hbase-098' ARGS='-Dtest=**/graphdb/hbase/*'
    - MODULE='cql' ARGS='-Dtest=**/diskstorage/cql/* -Dtest.skip.murmur=true'
    - MODULE='cql' ARGS='-Dtest=**/diskstorage/cql/* -Dtest.skip.byteorderedpartitioner=true -Dtest.skip.murmur-serial=true -Dtest.skip.murmur-ssl=true'
    - MODULE='cql' ARGS='-Dtest=**/graphdb/cql/* -Dtest.skip.murmur=true'
    - MODULE='cql' ARGS='-Dtest=**/graphdb/cql/* -Dtest.skip.byteorderedpartitioner=true -Dtest.skip.murmur-serial=true -Dtest.skip.murmur-ssl=true'
    - MODULE='janusgraph-release'

matrix:
  fast_finish: true
  # https://docs.travis-ci.com/user/customizing-the-build#Rows-that-are-Allowed-to-Fail
  allow_failures:
    # Elasticsearch 1.x tests can fail non-deterministically
    - env: MODULE='es' ARGS='-Pelasticsearch1,es-docker'
    # Can fail due to timeout (runs longer than 50min)
    - env: MODULE='hbase-parent/janusgraph-hbase-098' ARGS='-Dtest=**/diskstorage/hbase/*'
    - env: MODULE='hbase-parent/janusgraph-hbase-098' ARGS='-Dtest=**/graphdb/hbase/*'
    - env: MODULE='cassandra' ARGS='-Dtest=**/diskstorage/cassandra/thrift/* -Dtest.skip.unordered=true -Dtest.skip.ssl=true -Dtest.skip.serial=true'
    - env: MODULE='cassandra' ARGS='-Dtest=**/diskstorage/cassandra/thrift/* -Dtest.skip.ordered=true -Dtest.skip.ssl=true -Dtest.skip.serial=true'
    - env: MODULE='cassandra' ARGS='-Dtest=**/diskstorage/cassandra/thrift/* -Dtest.skip.unordered=true -Dtest.skip.ordered=true'
    - env: MODULE='cassandra' ARGS='-Dtest=**/graphdb/thrift/* -Dtest.skip.unordered=true -Dtest.skip.ssl=true -Dtest.skip.serial=true'
    - env: MODULE='cassandra' ARGS='-Dtest=**/graphdb/thrift/* -Dtest.skip.ordered=true -Dtest.skip.ssl=true -Dtest.skip.serial=true'
    - env: MODULE='cassandra' ARGS='-Dtest=**/graphdb/thrift/* -Dtest.skip.unordered=true -Dtest.skip.ordered=true'
    - env: MODULE='cql' ARGS='-Dtest=**/diskstorage/cql/* -Dtest.skip.murmur=true'
    - env: MODULE='cql' ARGS='-Dtest=**/diskstorage/cql/* -Dtest.skip.byteorderedpartitioner=true -Dtest.skip.murmur-serial=true -Dtest.skip.murmur-ssl=true'
    - env: MODULE='cql' ARGS='-Dtest=**/graphdb/cql/* -Dtest.skip.murmur=true'
    - env: MODULE='cql' ARGS='-Dtest=**/graphdb/cql/* -Dtest.skip.byteorderedpartitioner=true -Dtest.skip.murmur-serial=true -Dtest.skip.murmur-ssl=true'

install:
  - if [[ ${TRAVIS_BRANCH} =~  ${RELEASE_REGEX} ]]; then
        if [ "${MODULE}" != "janusgraph-release" ]; then
            echo "Building janusgraph-${MODULE} and dependencies";
            travis_retry travis_wait \
                mvn install --projects janusgraph-${MODULE} --also-make \
                -DskipTests=true -Dmaven.javadoc.skip=true --batch-mode --show-version;
        fi;
    fi;

# A Release Branch of the form #.#.# will only build a tar file
# and deploy to S3.  Our process will be such that we'll review
# the latest integration build for test results and
# merge nto the release branch. A build will be kicked off to
# build the tar file.
script:
  - if [[ ${TRAVIS_BRANCH} =~  ${RELEASE_REGEX} ]]; then
        if [ "${MODULE}" == "janusgraph-release" ]; then
            echo "Creating tar file called janusgraph_ibm_${TRAVIS_BRANCH}.tgz";
            mvn clean install -DskipTests -Dgpg.skip -Pjanusgraph-release;
            mkdir release;
            unzip janusgraph-dist/janusgraph-dist-hadoop-2/target/janusgraph-${TRAVIS_BRANCH}-hadoop2.zip;
            RELEASE_DIR="janusgraph-${TRAVIS_BRANCH}-hadoop2";
            cd ${RELEASE_DIR};
            tar -cvzf ../release/janusgraph_ibm_${TRAVIS_BRANCH}.tgz bin conf lib;
            cd ..
        fi;
    elif [ "${MODULE}" != "janusgraph-release" ]; then
        echo "Testing janusgraph-${MODULE}";
        travis_retry travis_wait 50 \
            mvn clean verify --projects janusgraph-${MODULE} -Pcoverage ${ARGS};
    fi

# Create a tar file only if we're releasing on a release branch
deploy:
  provider: s3
  access_key_id: 'AKIAJNO3BSVBBC7DMC5Q'
  secret_access_key:
    secure: l9EFiHc/JohTCLqtkGCcupLeWV1Hihg45pLibivM9C11NeoSCM0MdhvVNiDIUpJvdHUwEMKQeEjqh5n/TEj8y/VlsLdFSG/U9JdYewpDow5EyhIeYZDpp0zwfjrxIPftdPx7dho/haIPKdzCps1TAYQOZYDkvaVLL/Fej2G2sHT0Ejtrtwrt4aTyVwQGTvsCBffR87rFRg6Z9suY60vR/isexsBs7LziVD4nNUgoWJeKGEhhHYr57xpnnKyZ6T9QBAbrmOe0TdGsgH6r0T1NLfd9cScS8ShxVEUDE4bBrc4+Jlk7t48mFJU7+WtMaqaiLKGJ/UF0sEbJnhg5dkL944APHjG5dQu1FCifUGj5oepBJ+9S5hDwoYEboeSGCD1DPtO19VvZcSYXn+tRCs0/m3seTujJg7/ciy26qRts50lf9LPtOp9J3dT07hVRGYMSzWXf+PHSo3QICJYeF7sw4DAgZKJa2qhksFUL73NZjMWWTER2rMkwFZbJoRT86EjfoZt1lgYkQLbBAQop25ByhYs0GTlnP6n1Qrm5J5mrQlhhm9/QKEV/qm4MM0t40FSG1KcKnpsdRIx42GNRPeBkYcXPhO6LSzecXYiEe13Y7WZ6ARzhXI5EMWqIR7PjlmwOaTBet3pgc28TTdBoPV2kDTtCpXBm3w5D4FxX1Eg8/gY=
  bucket: 'dblayer-builds'
  local_dir: release
  skip_cleanup: true
  on:
    all_branches: true
    condition: "(${TRAVIS_BRANCH} =~ ${RELEASE_REGEX}) && (${MODULE} = janusgraph-release) "

# Syntax and more info: https://docs.travis-ci.com/user/notifications
notifications:
  email:
    - cjquinon@us.ibm.com
  # Notify us of integration build failures only
  slack: 
    rooms:
        - 'compose:UwF0sO1h8oZL3ARHvX19hndE#graphdb'
    on_pull_requests: false
    on_success: never
